# This is a library of preconfigured services for Docksal.
# To use any service extend it from this file located at ${HOME}/.docksal/stacks/services.yml.
# See ${HOME}/.docksal/stacks/default.yml for a basic LAMP stack extending from web, db and cli services in this file.

x-common-settings: &common-settings
  dns:
    - ${DOCKSAL_DNS1}
    - ${DOCKSAL_DNS2}
  healthcheck:
    interval: ${DOCKSAL_CONTAINER_HEALTHCHECK_INTERVAL}
  logging:
    options:
      max-size: ${DOCKSAL_CONTAINER_LOG_MAX_SIZE}
      max-file: ${DOCKSAL_CONTAINER_LOG_MAX_FILE}

services:
  # Web: Apache
  apache:
    hostname: web
    image: ${WEB_IMAGE:-docksal/apache:2.4-2.5}
    volumes:
      - project_root:/var/www:ro,nocopy,cached  # Project root volume (read-only)
    labels:
      - io.docksal.virtual-host=${VIRTUAL_HOST},*.${VIRTUAL_HOST},${VIRTUAL_HOST}.*
      - io.docksal.cert-name=${VIRTUAL_HOST_CERT_NAME:-none}
      - io.docksal.project-root=${PROJECT_ROOT}
      - io.docksal.permanent=${SANDBOX_PERMANENT:-false}
    environment:
      - APACHE_DOCUMENTROOT=/var/www/${DOCROOT:-docroot}
      - APACHE_FCGI_HOST_PORT=cli:9000
      - APACHE_BASIC_AUTH_USER
      - APACHE_BASIC_AUTH_PASS
    <<: *common-settings

  # Web: Nginx
  nginx:
    hostname: web
    image: ${WEB_IMAGE:-docksal/nginx:1.20-1.2}
    volumes:
    - project_root:/var/www:ro,nocopy,cached  # Project root volume (read-only)
    labels:
    - io.docksal.virtual-host=${VIRTUAL_HOST},*.${VIRTUAL_HOST},${VIRTUAL_HOST}.*
    - io.docksal.cert-name=${VIRTUAL_HOST_CERT_NAME:-none}
    - io.docksal.project-root=${PROJECT_ROOT}
    - io.docksal.permanent=${SANDBOX_PERMANENT:-false}
    environment:
    - NGINX_VHOST_PRESET=drupal
    - NGINX_FCGI_HOST_PORT=cli:9000
    - NGINX_SERVER_ROOT=/var/www/${DOCROOT}
    - NGINX_BASIC_AUTH_USER
    - NGINX_BASIC_AUTH_PASS
    <<: *common-settings

  # DB: MySQL
  mysql:
    hostname: db
    image: ${DB_IMAGE:-docksal/mysql:8.0-2.0}
    ports:
      - "${MYSQL_PORT_MAPPING:-3306}"
    volumes:
      - project_root:/var/www:ro,nocopy,cached  # Project root volume (read-only)
      - db_data:/var/lib/mysql  # Database data volume
    environment:
      - MYSQL_ROOT_PASSWORD
      - MYSQL_USER
      - MYSQL_PASSWORD
      - MYSQL_DATABASE
      - MYSQL_ALLOW_EMPTY_PASSWORD
      - MYSQL_RANDOM_ROOT_PASSWORD
      - MYSQL_ONETIME_PASSWORD
      - MYSQL_INITDB_SKIP_TZINFO
    <<: *common-settings

  # DB: MySQL
  mariadb:
    hostname: db
    image: ${DB_IMAGE:-docksal/mariadb:10.11-1.4}
    ports:
    - "${MYSQL_PORT_MAPPING:-3306}"
    volumes:
    - project_root:/var/www:ro,nocopy,cached  # Project root volume (read-only)
    - db_data:/var/lib/mysql  # Database data volume
    environment:
    - MYSQL_ROOT_PASSWORD
    - MYSQL_USER
    - MYSQL_PASSWORD
    - MYSQL_DATABASE
    - MYSQL_ALLOW_EMPTY_PASSWORD
    - MYSQL_RANDOM_ROOT_PASSWORD
    - MYSQL_ONETIME_PASSWORD
    - MYSQL_INITDB_SKIP_TZINFO
    <<: *common-settings

  # DB: PostgreSQL
  pgsql:
    hostname: db
    image: ${DB_IMAGE:-postgres:14.2-alpine}
    ports:
      - "${PGSQL_PORT_MAPPING:-5432}"
    volumes:
      - project_root:/var/www:ro,nocopy,cached  # Project root volume (read-only)
      - db_data:/var/lib/postgresql/data  # Database data volume
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-default}
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-user}
    <<: *common-settings

  # CLI - Used for all console commands and tools.
  cli:
    hostname: cli
    image: ${CLI_IMAGE:-docksal/cli:php8.3-3.8}
    volumes:
      - project_root:/var/www:rw,nocopy,cached  # Project root volume
      - docksal_ssh_agent:/.ssh-agent:ro  # Shared ssh-agent socket
      - ${SSH_AUTH_SOCK_DIR}:${SSH_AUTH_SOCK_DIR}:ro # Shared directory for SSH key forwarding support
      - cli_home:/home/docker  # Write-heavy directories should be in volumes. See https://github.com/docksal/docksal/issues/325
    labels:
      - io.docksal.user=docker
      - io.docksal.shell=bash
    environment:
      - GIT_USER_EMAIL
      - GIT_USER_NAME
      - HOST_UID
      - HOST_GID
      - DOCROOT
      - VIRTUAL_HOST
      - XDEBUG_ENABLED=${XDEBUG_ENABLED:-0}
      # Point xdebug to the PHP Debug listener on the host
      - XDEBUG_CONFIG=client_host=${DOCKSAL_HOST_IP}
      - PHP_IDE_CONFIG # This helps with console scripts debugging in PHPStorm (the values is set in docksal-local.env)
      - DRUSH_ALLOW_XDEBUG=${XDEBUG_ENABLED:-0}
      - DRUSH_OPTIONS_URI=${VIRTUAL_HOST}
      - BLACKFIRE_CLIENT_ID
      - BLACKFIRE_CLIENT_TOKEN
      - SECRET_SSH_PRIVATE_KEY
      - SECRET_PLATFORMSH_CLI_TOKEN
      - SECRET_TERMINUS_TOKEN
      - SECRET_ACQUIA_CLI_KEY
      - SECRET_ACQUIA_CLI_SECRET
      - SSH_AUTH_SOCK=${SSH_AUTH_SOCK:-/.ssh-agent/proxy-socket}  # SSH key forwarding support
      - MYSQL_HOST
      - MYSQL_ROOT_PASSWORD
      - MYSQL_USER
      - MYSQL_PASSWORD
      - MYSQL_DATABASE
      - COMPOSER_DEFAULT_VERSION
      - COMPOSER_ALLOW_XDEBUG=${XDEBUG_ENABLED:-0}
      - COMPOSER_DISABLE_XDEBUG_WARN=${XDEBUG_ENABLED:-0}
    <<: *common-settings

  # Varnish
  varnish:
    hostname: varnish
    image: ${VARNISH_IMAGE:-docksal/varnish:7.0-3.1}
    volumes:
      - project_root:/var/www:ro,nocopy,cached  # Project root volume (read-only)
    labels:
      - io.docksal.virtual-host=varnish.${VIRTUAL_HOST},varnish.${VIRTUAL_HOST}.*
      - io.docksal.cert-name=${VIRTUAL_HOST_CERT_NAME:-none}
    environment:
      - VARNISH_BACKEND_HOST=web
    <<: *common-settings

  # Memcached
  memcached:
    hostname: memcached
    image: ${MEMCACHED_IMAGE:-memcached:1.6-alpine}
    command: ["-m", "128"]  # Set memcached memory limit to 128 MB by default
    <<: *common-settings

  # Redis
  redis:
    hostname: redis
    image: ${REDIS_IMAGE:-wodby/redis:6.2}
    environment:
      - REDIS_MAXMEMORY=${REDIS_MAXMEMORY:-256m}
      # Additional variables can be found https://github.com/wodby/redis
    <<: *common-settings

  # Solr
  solr:
    hostname: solr
    image: ${SOLR_IMAGE:-docksal/solr:8.6-edge}
    volumes:
      - project_root:/var/www:ro,nocopy,cached  # Project root volume (read-only)
    labels:
      - io.docksal.virtual-host=solr.${VIRTUAL_HOST},solr.${VIRTUAL_HOST}.*
      - io.docksal.virtual-port=8983
      - io.docksal.cert-name=${VIRTUAL_HOST_CERT_NAME:-none}
    <<: *common-settings

  # Mailpit
  mail:
    hostname: mail
    image: ${MAILPIT_IMAGE:-axllent/mailpit:v1.15.1}
    volumes:
      - project_root:/var/www:ro,nocopy,cached  # Project root volume (read-only)
    labels:
      - io.docksal.virtual-host=mail.${VIRTUAL_HOST},mail.${VIRTUAL_HOST}.*
      - io.docksal.virtual-port=8025
      - io.docksal.cert-name=${VIRTUAL_HOST_CERT_NAME:-none}
    <<: *common-settings

  # Blackfire
  blackfire:
    image: blackfire/blackfire:2
    environment:
      - BLACKFIRE_SERVER_ID
      - BLACKFIRE_SERVER_TOKEN
    <<: *common-settings

  # Elastic Search
  elasticsearch:
    hostname: elasticsearch
    image: ${ELASTICSEARCH_IMAGE:-elasticsearch:8.1.2}
    ports:
      - "${ELASTICSEARCH_PORT_MAPPING:-9200}"
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    <<: *common-settings

  # Cloudflare Tunnel
  cloudflared:
    hostname: cloudflared
    image: ${CLOUDFLARED_IMAGE:-cloudflare/cloudflared:latest}
    environment:
      - TUNNEL_URL=http://web
      - NO_AUTOUPDATE=true
    command: ["tunnel"]
    <<: *common-settings
